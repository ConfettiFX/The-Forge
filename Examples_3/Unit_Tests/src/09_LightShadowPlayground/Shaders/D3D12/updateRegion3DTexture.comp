/*
* Copyright (c) 2018-2019 Confetti Interactive Inc.
*
* This file is part of The-Forge
* (see https://github.com/ConfettiFX/The-Forge).
*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
#include "SDF_Constant.h"

StructuredBuffer<float> SDFVolumeDataBuffer;


RWTexture3D<half> SDFVolumeTextureAtlas;

cbuffer UpdateSDFVolumeTextureAtlasCB : register(b1)
{
	uint3 mSourceAtlasVolumeMinCoord;
	uint3 mSourceDimensionSize;
	uint3 mSourceAtlasVolumeMaxCoord;
};

[numthreads(8, 8, 8)]
void main(uint3 threadID : SV_DispatchThreadID, uint3 GTid : SV_GroupThreadID)
{
	if(mSourceAtlasVolumeMinCoord.x > threadID.x || 
		mSourceAtlasVolumeMinCoord.y > threadID.y ||
		mSourceAtlasVolumeMinCoord.z > threadID.z || 
		mSourceAtlasVolumeMaxCoord.x < threadID.x || 
		mSourceAtlasVolumeMaxCoord.y < threadID.y ||
		mSourceAtlasVolumeMaxCoord.z < threadID.z)
	{
		return;	
	}

	uint3 localThreadID = threadID - mSourceAtlasVolumeMinCoord;

	uint finalLocalIndex = localThreadID.z * mSourceDimensionSize.x * 
		mSourceDimensionSize.y + localThreadID.y * mSourceDimensionSize.x + localThreadID.x;

	SDFVolumeTextureAtlas[threadID] = SDFVolumeDataBuffer[finalLocalIndex];
}