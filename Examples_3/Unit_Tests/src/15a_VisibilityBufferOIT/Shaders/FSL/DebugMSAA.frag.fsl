/*
 * Copyright (c) 2017-2025 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#include "VisibilityBufferResources.h.fsl"
#include "ProgMSAAResolve.srt.h" // Re-use resolve descriptors, since we're rendering debug MSAA samples

#define TOTAL_IMAGES 4

STRUCT(PsIn)
{
	DATA(float4, position, SV_Position);
	DATA(float2, texCoord, TEXCOORD);
#if FT_MULTIVIEW
    DATA(FLAT(uint), ViewID, TEXCOORD3);
#endif
};

STRUCT(FSOutput)
{
	DATA(float4, FragmentOutput, SV_Target);
};

uint ComputeSampleIndex(float2 texCoord)
{
	uint horizontalIdx = texCoord.x > 0.5 ? 1 : 0;
	uint verticalIdx = texCoord.y > 0.5 ? 1 : 0;
	return verticalIdx * 2 + horizontalIdx;
}

ROOT_SIGNATURE(DefaultRootSignature)
FSOutput PS_MAIN( PsIn In )
{
    INIT_MAIN;
    FSOutput Out;

#if FT_MULTIVIEW
	GetDimensionsMSArray(gResolveSource, textureSize);
#else
	GetDimensionsMS(gResolveSource, textureSize);
#endif
	
	uint sampleIndex = ComputeSampleIndex(In.texCoord);

	// This is intended to be used in debugging only.
	float4 color = float4(0.0, 0.0, 0.0, 0.0);
	for (uint i = 0; i < TOTAL_IMAGES; ++i)
	{
		float2 offset = float2(i % 2, i / 2);
		float2 sampleTexCoord = fmod(In.texCoord, 0.5) * 2.0 * float2(textureSize.xy) + offset;

		if (sampleIndex < SAMPLE_COUNT)
		{
#if FT_MULTIVIEW
			color += LoadTex2DArrayMS(gResolveSource, gSamplerPointClamp, uint3(sampleTexCoord, In.ViewID), sampleIndex);
#else
			color += LoadTex2DMS(gResolveSource, gSamplerPointClamp, sampleTexCoord, sampleIndex);
#endif
		}
	}

	color /= TOTAL_IMAGES;
	
    Out.FragmentOutput = float4(color.rgb, 1.0);
    RETURN(Out);
}
