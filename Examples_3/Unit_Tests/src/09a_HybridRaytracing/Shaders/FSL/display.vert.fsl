/*
 * Copyright (c) 2017-2024 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/


STRUCT(PsIn)
{
	DATA(float2, texCoord, TEXCOORD);
	DATA(float4, position, SV_Position);
};

PsIn VS_MAIN( SV_VertexID(uint) VertexID )
{
	INIT_MAIN;
	PsIn Out;

	// Produce a fullscreen triangle
	float4 position;
	position.x = (VertexID == 2) ? 3.0 : -1.0;
	position.y = (VertexID == 0) ? -3.0 : 1.0;
	position.zw = f2(1.0);

#ifdef GPU_CRASH
	// Causing a GPU hang...
    float counter = 1.0;
    while (counter > 0.0)
    {
        position.xyz += float3(0.1, 0.2, 0.3);
        counter += position.r;
    }
#endif

	Out.position = position;
	Out.texCoord = position.xy * float2(0.5, -0.5) + 0.5;

	RETURN(Out);
}
