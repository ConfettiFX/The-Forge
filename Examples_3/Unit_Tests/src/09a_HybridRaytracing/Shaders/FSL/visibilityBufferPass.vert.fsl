/*
 * Copyright (c) 2017-2024 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#include "Shader_Defs.h.fsl"
#include "vb_resources.h.fsl"

STRUCT(VsIn)
{
    DATA(float3, Position, POSITION);
};

STRUCT(PsIn)
{
	DATA(float4, Position, SV_Position);
#if !defined(INDIRECT_ROOT_CONSTANT)
	DATA(FLAT(uint), drawId, TEXCOORD0);
#endif
};

PsIn VS_MAIN( VsIn In, SV_InstanceID(uint) instanceId) 
{
	INIT_MAIN;
	PsIn Out;
	Out.Position = mul(Get(WorldViewProjMat), float4(In.Position.xyz, 1.0f));
	SET_DRAW_ID(Out, drawId, instanceId);

#ifdef GPU_CRASH
	// Causing a GPU hang...
    float counter = 1.0;
    while (counter > 0.0)
    {
        Out.Position.xyz += float3(0.1, 0.2, 0.3);
        counter += abs(Out.Position.r);
		// Trick PlayStation compilers into thinking that the loop will finish
		counter -= 0.00000001;
    }
#endif

	RETURN(Out);
}

