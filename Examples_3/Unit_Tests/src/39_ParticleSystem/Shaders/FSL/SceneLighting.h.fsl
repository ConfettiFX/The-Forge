/*
* Copyright (c) 2017-2025 The Forge Interactive Inc.
*
* This file is part of The-Forge
* (see https://github.com/ConfettiFX/The-Forge).
*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

#ifndef SCENE_LIGHTING_H
#define SCENE_LIGHTING_H

// Simple Sky model for skybox and ambient lighting
#include "Sky.h.fsl"

float3 GetAmbientLight(float3 normal, float NoL)
{
	float ambientIntensity = 0.05f + gPerFrameConstants.ambientLightIntensity * pow(NoL, 2.0);
	if (gPerFrameConstants.ambientLightFromSky > 0.0)
	{
		return getSkyColor(normal).xyz * ambientIntensity;
	}

	uint currentTimeOfTheDay = 0;
	for (uint f=0; f<DAY_CYCLE_KEY_FRAME_COUNT; f++)
	{
		if (gPerFrameConstants.timeOfDay > gPerFrameConstants.dayCycleKeyFrames[f / 4][f % 4])
		{
			currentTimeOfTheDay = f;
		}
	}

	uint nextTimeOfTheDay = (currentTimeOfTheDay + 1) % DAY_CYCLE_KEY_FRAME_COUNT;
	float currentKeyFrame = gPerFrameConstants.dayCycleKeyFrames[currentTimeOfTheDay/4][currentTimeOfTheDay%4];
	float nextKeyFrame = gPerFrameConstants.dayCycleKeyFrames[nextTimeOfTheDay/4][nextTimeOfTheDay%4];

	float timeOfDayT = clamp(abs(gPerFrameConstants.timeOfDay - currentKeyFrame) / 
		abs((nextTimeOfTheDay == 0 ? 1.0 - nextKeyFrame  : nextKeyFrame) - currentKeyFrame), 0.0f, 1.0f);
	float3 ambientDiffuse = lerp(gPerFrameConstants.ambientColors[currentTimeOfTheDay].xyz,
							gPerFrameConstants.ambientColors[nextTimeOfTheDay].xyz,
							timeOfDayT) * ambientIntensity;
	// Lightning strikes
	if((timeOfDayT >= 0.3f && timeOfDayT <= 0.32f) || (timeOfDayT >= 0.8f && timeOfDayT <= 0.82f) && currentTimeOfTheDay == 4)
		ambientDiffuse = float3(0.85f, 0.6f, 1.0f) * (0.05f + pow(-NoL, 2.0));

	return ambientDiffuse;
}

#endif // SCENE_LIGHTING_H