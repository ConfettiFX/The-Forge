/*
 * Copyright (c) 2017-2024 The Forge Interactive Inc.
 *
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#ifndef _SHADER_DEFS_H
#define _SHADER_DEFS_H

#ifdef NO_FSL_DEFINITIONS
    #define STATIC static
    #define STRUCT(NAME) struct NAME
    #define DATA(TYPE, NAME, SEM) TYPE NAME
    #define CBUFFER(NAME, REG, FREQ, BINDING) struct NAME
	#define float4x4 mat4
#endif

#define LIGHT_COUNT 128
#define LIGHT_SIZE 150.0f

#define LIGHT_CLUSTER_WIDTH 8
#define LIGHT_CLUSTER_HEIGHT 8

#define LIGHT_CLUSTER_COUNT_POS(ix, iy) ( ((iy)*LIGHT_CLUSTER_WIDTH)+(ix) )
#define LIGHT_CLUSTER_DATA_POS(il, ix, iy) ( LIGHT_CLUSTER_COUNT_POS(ix, iy)*LIGHT_COUNT + (il) )

//Override default VB geom sets
#define NUM_GEOMETRY_SETS 2          // 1 - opaque, 2 - alpha cutout
#define GEOMSET_OPAQUE 0
#define GEOMSET_ALPHA_CUTOUT 1

#include "../../../../../Common_3/Renderer/VisibilityBuffer2/Shaders/FSL/vb_structs.h.fsl"

STRUCT(MeshConstants)
{
	DATA(uint, indexOffset, None);
	DATA(uint, vertexOffset, None);
	DATA(uint, materialID, None);
	DATA(uint, twoSided, None); //0 or 1
};

CBUFFER(PerFrameConstants, UPDATE_FREQ_PER_FRAME, b0, binding = 0)
{
	DATA(float4, camPos, None);
	//========================================
	DATA(float4, lightDir, None);
	//========================================
	DATA(float4, lightColor, None);
	//========================================
	DATA(float2, CameraPlane, None); //x : near, y : far
	DATA(uint, lightingMode, None);
	DATA(uint, outputMode, None);
	//========================================
	DATA(float2, twoOverRes, None);
	DATA(float, esmControl, None);
	DATA(uint, aoQuality, None);
	//========================================
	DATA(float2, frustumPlaneSizeNormalized, None);
	DATA(float2, depthTexSize, None);
	//========================================
	DATA(float, aoIntensity, None);
	DATA(uint, visualizeAo, None);
	DATA(uint, smallScaleRaster, None);
	DATA(uint, visualizeBinOccupancy, None);
};

STRUCT(LightData)
{
	DATA(float4, position, None);
	DATA(float4, color, None);
};

#include "../../../../../Common_3/Renderer/VisibilityBuffer2/Shaders/FSL/vb_shader_defs.h.fsl"
#endif
