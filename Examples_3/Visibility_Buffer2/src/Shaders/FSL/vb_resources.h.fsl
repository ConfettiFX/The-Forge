/*
 * Copyright (c) 2017-2024 The Forge Interactive Inc.
 *
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#ifndef vb_resources_h
#define vb_resources_h

RES(SamplerState, textureSampler, UPDATE_FREQ_NONE, s0, binding = 2);
#if defined(METAL) || defined(ORBIS) || defined(PROSPERO)
	RES(Tex2D(float4), diffuseMaps[INSTANCE_BUFFER_SIZE],  UPDATE_FREQ_NONE, t6, binding = 21);
#else
	RES(Tex2D(float4), diffuseMaps[INSTANCE_BUFFER_SIZE],  space4, t6, binding = 21);
#endif

RES(ByteBuffer, vertexPositionBuffer, UPDATE_FREQ_NONE, t0, binding = 11);
RES(ByteBuffer, filteredIndexBuffer, UPDATE_FREQ_PER_FRAME, t1, binding = 12);
RES(Buffer(uint), indirectFilteredBatches, UPDATE_FREQ_PER_FRAME, t2, binding = 13);
RES(ByteBuffer, vertexTexCoordBuffer, UPDATE_FREQ_NONE, t5, binding = 18);

PUSH_CONSTANT(RootConstantViewInfo, b0)
{
	DATA(uint, view, None);
    DATA(int, targetWidth, None);
    DATA(int, targetHeight, None);
};

#if defined(INDIRECT_ROOT_CONSTANT)
	PUSH_CONSTANT(indirectRootConstant, b1)
	{
		DATA(uint, indirectDrawId, None);
	};
	#define getDrawID() indirectDrawId
#else
    #define getDrawID() In.drawId
#endif

STRUCT(VsInVBAlphaTested)
{
    DATA(float3, position, POSITION);
    DATA(uint, texCoord, TEXCOORD);
};

STRUCT(PsInVBAlphaTested)
{
	DATA(float4, position, SV_Position);
	DATA(float2, texCoord, TEXCOORD0);
	DATA(FLAT(uint), vbData, TEXCOORD1);
	DATA(FLAT(uint), batchData, TEXCOORD2);
};

#endif /* vb_resources_h */
