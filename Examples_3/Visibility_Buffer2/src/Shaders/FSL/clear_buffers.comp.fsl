/*
 * Copyright (c) 2017-2024 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#include "../../../../../Common_3/Renderer/VisibilityBuffer2/Shaders/FSL/vb_shader_defs.h.fsl"
#include "triangle_binning.h.fsl"


RES(RWBuffer(uint), binBuffer, UPDATE_FREQ_NONE, u4, binding = 8);

NUM_THREADS(1, 1, 1)
void CS_MAIN( SV_DispatchThreadID(uint3) threadID )
{
	INIT_MAIN;

    if (threadID.x == 0)
    {
       for (uint view = 0; view < NUM_CULLING_VIEWPORTS; ++view)
       {
           for (uint tx = 0; tx < TILE_COUNTX; ++tx)
           {
               for (uint ty = 0; ty < TILE_COUNTY; ++ty)
               {
                   Get(binBuffer)[BinBufferViewOffset(view) + TIDX(tx, ty)] = 0u;
               }
           }
       }
    }
	RETURN();
}
