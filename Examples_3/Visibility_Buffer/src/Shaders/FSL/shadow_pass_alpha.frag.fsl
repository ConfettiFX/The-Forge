/*
 * Copyright (c) 2018-2020 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#include "packing.h"
#include "shader_defs.h"
#include "vb_resources.h"

STRUCT(PsInAlphaTested)
{
	DATA(float4, position, SV_Position);
	DATA(float2, texCoord, TEXCOORD0);
#if defined(VULKAN) || defined(ORBIS) || defined(PROSPERO)
    DATA(FLAT(uint), drawId, TEXCOORD3);
#endif
};

PS_ZORDER_EARLYZ()

void PS_MAIN( PsInAlphaTested In )
{
    INIT_MAIN;
    uint matBaseSlot = BaseMaterialBuffer(true, 0); //1 is camera view, 0 is shadow map view
    uint materialID = Get(indirectMaterialBuffer)[matBaseSlot + getDrawID()];

    float alpha = 0.0f;
    BeginNonUniformResourceIndex(materialID, MAX_TEXTURE_UNITS);
		alpha = SampleTex2D(Get(diffuseMaps)[materialID], Get(textureFilter), In.texCoord).a;
    EndNonUniformResourceIndex();

    clip(alpha - 0.5f);
    RETURN();
}
