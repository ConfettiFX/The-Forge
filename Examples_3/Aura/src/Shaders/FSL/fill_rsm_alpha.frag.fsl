/*
 * Copyright (c) 2017-2024 The Forge Interactive Inc.
 *
 * This is a part of Aura.
 * 
 * This file(code) is licensed under a 
 * Creative Commons Attribution-NonCommercial 4.0 International License 
 *
 *   (https://creativecommons.org/licenses/by-nc/4.0/legalcode) 
 *
 * Based on a work at https://github.com/ConfettiFX/The-Forge.
 * You may not use the material for commercial purposes.
*/

#include "shader_defs.h.fsl"
#define USE_NORMAL
#include "vb_rsm_resources.h.fsl"
#include "wind.h.fsl"

STRUCT(PsOut)
{
	DATA(float4, Albedo, SV_Target0);
	DATA(float4, Normal, SV_Target1);
};

PsOut PS_MAIN( PsInAlphaTested In)
{
	INIT_MAIN;
	PsOut Out;
	Out.Albedo     = f4(1.0f);
	Out.Normal.xyz = In.normal;
	Out.Normal.w   = 0.0f;

	if (Get(useColorMaps))
	{
		uint matID = In.materialID;

		BeginNonUniformResourceIndex(matID, MAX_TEXTURE_UNITS);
			Out.Albedo = SampleTex2D(Get(diffuseMaps)[matID], Get(rsmFilter), In.texCoord);
		EndNonUniformResourceIndex();
	}

	RETURN(Out);
}
