/*
 * Copyright (c) 2017-2024 The Forge Interactive Inc.
 *
 * This is a part of Aura.
 *
 * This file(code) is licensed under a
 * Creative Commons Attribution-NonCommercial 4.0 International License
 *
 *   (https://creativecommons.org/licenses/by-nc/4.0/legalcode)
 *
 * Based on a work at https://github.com/ConfettiFX/The-Forge.
 * You may not use the material for commercial purposes.
*/

#ifndef SHADER_DEFS_H
#define SHADER_DEFS_H

#include "wind.h.fsl"

#ifdef NO_FSL_DEFINITIONS
	#define STATIC static
	#define STRUCT(NAME) struct NAME
	#define DATA(TYPE, NAME, SEM) TYPE NAME
	#define CBUFFER(NAME, REG, FREQ, BINDING) struct NAME
	#define f4x4 mat4
	#define uint uint32_t
#endif

#define LIGHT_COUNT 128
#define LIGHT_SIZE  150.0f

#define LIGHT_CLUSTER_WIDTH  8
#define LIGHT_CLUSTER_HEIGHT 8

#define LIGHT_CLUSTER_COUNT_POS(ix, iy)    (((iy) * LIGHT_CLUSTER_WIDTH) + (ix))
#define LIGHT_CLUSTER_DATA_POS(il, ix, iy) (LIGHT_CLUSTER_COUNT_POS(ix, iy) * LIGHT_COUNT + (il))

// This defines the amount of viewports that are going to be culled in parallel.
// Overrides default VB defines
#define NUM_CULLING_VIEWPORTS 5
#define VIEW_SHADOW 0
#define VIEW_CAMERA 1

#define NUM_RSM_CASCADES 3
#define VIEW_RSM_CASCADE0 2
#define VIEW_RSM_CASCADE1 3
#define VIEW_RSM_CASCADE2 4

// Overrides default VB defines
#define NUM_GEOMETRY_SETS 2          // 1 - opaque, 2 - alpha cutout
#define GEOMSET_OPAQUE 0
#define GEOMSET_ALPHA_CUTOUT 1

#include "../../../../../Common_3/Renderer/VisibilityBuffer/Shaders/FSL/vb_structs.h.fsl"

STRUCT(MeshConstants)
{
	DATA(uint, indexOffset, None);
	DATA(uint, vertexOffset,   None);
	DATA(uint, materialID,  None);
	DATA(uint, twoSided,    None); // 0 or 1
};


STRUCT(LightData)
{
	DATA(float4, position, None);
	DATA(float4, color,    None);
};

CBUFFER(PerFrameConstants, UPDATE_FREQ_PER_FRAME, b0, binding = 0)
{
	DATA(float4,            camPos,                                  None);
	DATA(float4,            lightDir,                                None);
	DATA(float4,            lightColor,                              None);
	DATA(float2,            CameraPlane,                             None); //x : near, y : far
	DATA(uint,              lightingMode,                            None);
	DATA(uint,              _pad0,                                   None);
	DATA(float2,            twoOverRes,                              None);
	DATA(float,             esmControl,                              None);
	DATA(uint,              specularQuality,                         None);
	DATA(WindConstants,     windData,                                None);
};

#include "../../../../../Common_3/Renderer/VisibilityBuffer/Shaders/FSL/vb_shader_defs.h.fsl"

#endif // SHADER_DEFS_H
