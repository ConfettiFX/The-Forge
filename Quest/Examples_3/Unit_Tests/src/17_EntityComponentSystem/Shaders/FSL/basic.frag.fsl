/*
 * Copyright (c) 2018-2021 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

PUSH_CONSTANT(RootConstant, b0)
{
	DATA(float, aspect, None);
};

STRUCT(InstanceData)
{
	DATA(float4, posScale, None);
	DATA(float4, colorIndex, None);
};

RES(Buffer(InstanceData), instanceBuffer, UPDATE_FREQ_PER_FRAME, t0, binding = 1);

RES(Tex2D(float4), uTexture0, UPDATE_FREQ_NONE, t1, binding = 2);
RES(SamplerState, uSampler0, UPDATE_FREQ_NONE, s2, binding = 3);

STRUCT(VSOutput)
{
	DATA(float4, pos, SV_Position);
	DATA(float3, color, COLOR0);
	DATA(float2, uv, TEXCOORD0);
};

float4 PS_MAIN( VSOutput In )
{
	INIT_MAIN;
	float4 Out;
    float4 diffuse = SampleTex2D(Get(uTexture0), Get(uSampler0), In.uv);
    float lum = dot(diffuse.rgb, f3(0.333));
    diffuse.rgb = lerp(diffuse.rgb, f3(lum), 0.8);
    diffuse.rgb *= In.color.rgb;
    Out = diffuse;
	RETURN(Out);
}