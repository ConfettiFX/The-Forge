/*
 * Copyright (c) 2018-2021 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#include "Shader_Defs.h"
#include "Packing.h"
#define MESH_PASS
#include "vb_resources.h"

STRUCT(PsIn)
{
	DATA(float4, Position, SV_Position);
	DATA(float2, TexCoord, TEXCOORD0);
#if defined(VULKAN) || defined(ORBIS) || defined(PROSPERO)
	DATA(FLAT(uint), drawId, TEXCOORD1);
#endif
};

void PS_MAIN( PsIn In )
{
	INIT_MAIN;
	uint matBaseSlot = BaseMaterialBuffer(true, VIEW_SHADOW); //1 is camera view, 0 is shadow map view
	uint materialID = LoadByte(Get(indirectMaterialBuffer), (matBaseSlot + getDrawID()) << 2);
	float4 texColor;
	BeginNonUniformResourceIndex(materialID, 256)
    	texColor = SampleLvlTex2D(Get(diffuseMaps)[materialID], Get(nearClampSampler), In.TexCoord, 0);
	EndNonUniformResourceIndex()
	clip(texColor.a < 0.5f ? -1 : 1);
	RETURN();
}
