/*
* Copyright (c) 2018-2021 The Forge Interactive Inc.
*
* This file is part of The-Forge
* (see https://github.com/ConfettiFX/The-Forge).
*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
#include "SDF_Constant.h"

RES(Buffer(float), SDFVolumeDataBuffer, UPDATE_FREQ_PER_FRAME, t0, binding = 0);
RES(RWTex3D(half), SDFVolumeTextureAtlas, UPDATE_FREQ_NONE, u0, binding = 2);

CBUFFER(UpdateSDFVolumeTextureAtlasCB, UPDATE_FREQ_PER_FRAME, b1, binding = 1)
{
	DATA(uint3, mSourceAtlasVolumeMinCoord, None);
	DATA(uint3, mSourceDimensionSize, None);
	DATA(uint3, mSourceAtlasVolumeMaxCoord, None);
};

NUM_THREADS(8, 8, 8)
void CS_MAIN( SV_DispatchThreadID(uint3) threadID, SV_GroupThreadID(uint3) GTid )
{
	INIT_MAIN;
	if(Get(mSourceAtlasVolumeMinCoord).x > threadID.x || 
		Get(mSourceAtlasVolumeMinCoord).y > threadID.y ||
		Get(mSourceAtlasVolumeMinCoord).z > threadID.z || 
		Get(mSourceAtlasVolumeMaxCoord).x < threadID.x || 
		Get(mSourceAtlasVolumeMaxCoord).y < threadID.y ||
		Get(mSourceAtlasVolumeMaxCoord).z < threadID.z)
		RETURN();

	uint3 localThreadID = threadID - Get(mSourceAtlasVolumeMinCoord);

	uint finalLocalIndex = localThreadID.z * Get(mSourceDimensionSize).x * 
		Get(mSourceDimensionSize).y + localThreadID.y * Get(mSourceDimensionSize).x + localThreadID.x;

	Write3D(Get(SDFVolumeTextureAtlas), threadID, half(Get(SDFVolumeDataBuffer)[finalLocalIndex]));
	RETURN();
}
