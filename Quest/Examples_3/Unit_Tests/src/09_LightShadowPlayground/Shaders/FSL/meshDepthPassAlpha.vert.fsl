/*
* Copyright (c) 2018-2021 The Forge Interactive Inc.
*
* This file is part of The-Forge
* (see https://github.com/ConfettiFX/The-Forge).
*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

#include "Shader_Defs.h"
#include "Packing.h"
#define MESH_PASS
#include "vb_resources.h"

#ifdef VULKAN
	#extension GL_ARB_shader_draw_parameters : enable
#endif

STRUCT(VsIn)
{
	DATA(float3, Position, POSITION);
	DATA(uint, TexCoord, TEXCOORD);
};

STRUCT(PsIn)
{
	DATA(float4, Position, SV_Position);
	DATA(float2, TexCoord, TEXCOORD0);
#if defined(VULKAN) || defined(ORBIS) || defined(PROSPERO)
	DATA(FLAT(uint), drawId, TEXCOORD1);
#endif
};

PsIn VS_MAIN( VsIn In, SV_InstanceID(uint) instanceId) 
{
	INIT_MAIN;
	PsIn Out;
	Out.Position = mul(Get(WorldViewProjMat)[VR_VIEW_ID], float4(In.Position.xyz, 1.0));
	Out.TexCoord = unpack2Floats(In.TexCoord);
#ifdef VULKAN
	Out.drawId = gl_DrawIDARB;
#endif
#if defined(ORBIS) || defined(PROSPERO)
	Out.drawId = instanceId;
#endif
	RETURN(Out);
}
