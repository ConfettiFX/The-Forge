/*
* Copyright (c) 2018-2021 The Forge Interactive Inc.
*
* This file is part of The-Forge
* (see https://github.com/ConfettiFX/The-Forge).
*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

STRUCT(VSOutput)
{
	DATA(float4, Position, SV_Position);
	DATA(float4, UV, TEXCOORD0);
};

RES(Tex2D(float4), Source, UPDATE_FREQ_NONE, t0, binding = 0);
RES(SamplerState, PointSampler, UPDATE_FREQ_NONE, s0, binding = 1);

float4 PS_MAIN( VSOutput In )
{    
	INIT_MAIN;
	float4 Out;
	float4 total = f4(0.0f);
	UNROLL for (int x = 0; x < 4; ++x)
	{
		UNROLL for(int y = 0; y < 4; ++y)
			total += LoadTex2D(Get(Source), Get(PointSampler), uint2(In.Position.xy) * 4 + uint2(x, y), 0);
	}

	Out = total / 16.0f;
	RETURN(Out);
}
