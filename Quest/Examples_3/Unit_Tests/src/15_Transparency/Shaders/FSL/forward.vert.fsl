/*
 * Copyright (c) 2018-2021 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#include "shaderDefs.h"

STRUCT(VSInput)
{
	DATA(float4, Position, POSITION);
	DATA(float3, Normal, NORMAL);
	DATA(float2, UV, TEXCOORD0);
};

STRUCT(VSOutput)
{
	DATA(float4, Position, SV_Position);
	DATA(float4, WorldPosition, POSITION0);
	DATA(float4, Normal, NORMAL0);
	DATA(float4, UV, TEXCOORD0);
	DATA(FLAT(uint), MatID, MAT_ID);
#if (PT_USE_REFRACTION + PT_USE_DIFFUSION) != 0
	DATA(float4, CSPosition, POSITION1);
#endif
#if PT_USE_REFRACTION != 0
	DATA(float4, CSNormal, NORMAL1);
#endif
	DATA(FLAT(uint), ViewID, TEXCOORD1);
};

VSOutput VS_MAIN( VSInput In, SV_InstanceID(uint) InstanceID) 
{
	INIT_MAIN;
	VSOutput Out;

	uint instanceID = InstanceID + Get(baseInstance);
	Out.UV = In.UV.xyyy;
	Out.Normal = normalize(mul(Get(objectInfo)[instanceID].normalMat, float4(In.Normal.xyz, 0)));
	Out.WorldPosition = mul(Get(objectInfo)[instanceID].toWorld, In.Position);
	Out.Position = mul(Get(camViewProj)[VR_VIEW_ID], Out.WorldPosition);
	Out.MatID = Get(objectInfo)[instanceID].matID;

#if (PT_USE_REFRACTION + PT_USE_DIFFUSION) != 0
	Out.CSPosition = mul(Get(camViewMat), Out.WorldPosition);
#endif
#if PT_USE_REFRACTION != 0
	Out.CSNormal  = mul(Get(camViewMat), float4(Out.Normal.xyz, 0));
	Out.CSNormal.xyz = normalize(Out.CSNormal.xyz);
#endif
	Out.ViewID = VR_VIEW_ID;

	RETURN(Out);
}
