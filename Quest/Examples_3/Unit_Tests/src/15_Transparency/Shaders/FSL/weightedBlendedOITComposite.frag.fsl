/*
* Copyright (c) 2018-2021 The Forge Interactive Inc.
*
* This file is part of The-Forge
* (see https://github.com/ConfettiFX/The-Forge).
*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

STRUCT(VSOutput)
{
	DATA(float4, Position, SV_Position);
	DATA(float4, UV, Texcoord0);
	DATA(FLAT(uint), ViewID, TEXCOORD1);
};

RES(Tex2DArray(float4), AccumulationTexture, UPDATE_FREQ_NONE, t0, binding = 1);
RES(Tex2DArray(float4), RevealageTexture, UPDATE_FREQ_NONE, t1, binding = 2);
RES(SamplerState, PointSampler, UPDATE_FREQ_NONE, s0, binding = 0);

float MaxComponent(float4 v)
{
	return max(max(max(v.x, v.y), v.z), v.w);
}

float4 PS_MAIN( VSOutput In )
{    
	INIT_MAIN;
	float4 Out;
	float revealage = SampleTex2DArray(Get(RevealageTexture), Get(PointSampler), float3(In.UV.xy, VR_VIEW_ID(In.ViewID))).r;
	clip(1.0f - revealage - 0.00001f);

	float4 accumulation = SampleTex2DArray(Get(AccumulationTexture), Get(PointSampler), float3(In.UV.xy, VR_VIEW_ID(In.ViewID)));
	if(isinf(MaxComponent(abs(accumulation))))
		accumulation.rgb = f3(accumulation.a);

	float3 averageColor = accumulation.rgb / max(accumulation.a, 0.00001f);

	Out = float4(averageColor, 1.0f - revealage);
	RETURN(Out);
}
