/*
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#define BASIC
#include "resources.h"

STRUCT(VsIn)
{
	DATA(float3, position, POSITION);
	DATA(float3, normal, NORMAL);
	DATA(float2, texCoord, TEXCOORD0);
};

STRUCT(PsIn)
{    
    DATA(float3, pos, POSITION);
	DATA(float3, normal, NORMAL);
	DATA(float2, texCoord, TEXCOORD0);
    DATA(float4, position, SV_Position);
};

PsIn VS_MAIN( VsIn In )
{
	INIT_MAIN;
	PsIn Out;
	float4x4 modelToWorld = Get(modelToWorldMatrices)[Get(nodeIndex)];

	float4 inPos = float4(In.position.xyz, 1.0f);
	float4 worldPosition = mul(modelToWorld, inPos);
	Out.position = mul(Get(projView)[VR_VIEW_ID], worldPosition);
	float3 inNormal = mul(modelToWorld, float4(In.normal, 0)).xyz;
	
	Out.pos = worldPosition.xyz;
	Out.normal = normalize(inNormal);
	Out.texCoord = float2(In.texCoord.xy);
	RETURN(Out);
}
