/*
* Copyright (c) 2018-2021 The Forge Interactive Inc.
*
* This file is part of The-Forge
* (see https://github.com/ConfettiFX/The-Forge).
*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

CBUFFER(ShadowUniformBuffer, UPDATE_FREQ_PER_FRAME, b2, binding = 2)
{
    DATA(float4x4, ViewProjMat[VR_MULTIVIEW_COUNT], None);
};

CBUFFER(cbPerProp, UPDATE_FREQ_PER_DRAW, b1, binding = 0)
{
	DATA(float4x4, world, None);
	DATA(float4x4, InvTranspose, None);
	DATA(int, unlit, None);
	DATA(int, hasAlbedoMap, None);
	DATA(int, hasNormalMap, None);
	DATA(int, hasMetallicRoughnessMap, None);
	DATA(int, hasAOMap, None);
	DATA(int, hasEmissiveMap, None);
	DATA(float4, centerOffset, None);
	DATA(float4, posOffset, None);
	DATA(float2, uvOffset, None);
	DATA(float2, uvScale, None);
	DATA(float, posScale, None);
	DATA(float, padding0, None);
};

STRUCT(VSInput)
{
	DATA(float3, Position, POSITION);
	DATA(float2, TexCoord, TEXCOORD0);
};

STRUCT(PsIn)
{
    DATA(float4, Position, SV_Position);
};

PsIn VS_MAIN( VSInput In )
{
	INIT_MAIN;
	PsIn Out;
	float4 inPos = float4(float3(In.Position.xyz), 1.0f);
	Out.Position = mul(Get(ViewProjMat)[VR_VIEW_ID], mul(Get(world), inPos));
	RETURN(Out);
}
